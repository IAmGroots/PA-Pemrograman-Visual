<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctIconNewPlaylist.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>